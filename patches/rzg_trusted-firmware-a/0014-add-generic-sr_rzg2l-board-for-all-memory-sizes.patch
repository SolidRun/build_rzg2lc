From 4745144ccdf889f022fc23f42032d936b103cf2c Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Tue, 21 May 2024 12:14:41 +0200
Subject: [PATCH 14/14] add generic sr_rzg2l board for all memory sizes

Identification of memory parameters is based on size in SKU,
as stored in EEPROM.
This can be extended in the future as need, e.g. by reading the
industrial / commercial flags oor adding a custom vendor extension.

The default fall-back is 1GB configuration.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 plat/renesas/rz/board/sr_rzg2l/ddr_params.c | 146 ++++++++++++++++++++
 plat/renesas/rz/board/sr_rzg2l/rz_board.mk  |  20 +++
 2 files changed, 166 insertions(+)
 create mode 100644 plat/renesas/rz/board/sr_rzg2l/ddr_params.c
 create mode 100644 plat/renesas/rz/board/sr_rzg2l/rz_board.mk

diff --git a/plat/renesas/rz/board/sr_rzg2l/ddr_params.c b/plat/renesas/rz/board/sr_rzg2l/ddr_params.c
new file mode 100644
index 000000000..9ef605339
--- /dev/null
+++ b/plat/renesas/rz/board/sr_rzg2l/ddr_params.c
@@ -0,0 +1,146 @@
+// SPDX-License-Identifier: BSD-3-Clause
+/*
+ * Copyright 2024 Josua Mayer <josua@solid-run.com>
+ */
+
+#include <lib/utils_def.h>
+#include <stdint.h>
+#include <string.h>
+
+#include <cpg.h>
+#include <common/debug.h>
+#include <ddr_internal.h>
+#include <ddr_mc_regs.h>
+#include <pfc.h>
+#include <riic.h>
+#include <riic_tlv.h>
+
+/*
+ * These structures are directly linked within ddr driver,
+ * not easily replaced with function calls or pointers.
+ *
+ * Because all parameters are same size, they can be applied with memcpy.
+ */
+uint32_t mc_init_tbl[MC_INIT_NUM][2] = {0};
+uint32_t mc_odt_pins_tbl[4] = {0};
+uint32_t mc_mr1_tbl[2] = {0};
+uint32_t mc_mr2_tbl[2] = {0};
+uint32_t mc_mr5_tbl[2] = {0};
+uint32_t mc_mr6_tbl[2] = {0};
+uint32_t mc_phy_settings_tbl[MC_PHYSET_NUM][2] = {0};
+uint32_t swizzle_mc_tbl[SWIZZLE_MC_NUM][2] = {0};
+uint32_t swizzle_phy_tbl[SIZZLE_PHY_NUM][2] = {0};
+char ddr_an_version[12] = {0};
+
+/*
+ * Each set of parameters are generated by Renesas tooling using same name.
+ * Include the parameters here adding individual prefixes by preprocessor.
+ */
+
+#define mc_init_tbl C_011_D4_01_1_mc_init_tbl
+#define ddr_an_version C_011_D4_01_1_ddr_an_version
+#include "param_mc_C-011_D4-01-1.c"
+#undef mc_init_tbl
+#undef ddr_an_version
+
+static void apply_C_011_D4_01_1(void)
+{
+	memcpy(&mc_init_tbl, &C_011_D4_01_1_mc_init_tbl, sizeof(uint32_t) * MC_INIT_NUM * 2);
+	memcpy(ddr_an_version, C_011_D4_01_1_ddr_an_version, strlen(C_011_D4_01_1_ddr_an_version) + 1);
+}
+
+#define mc_init_tbl C_011_D4_02_2_mc_init_tbl
+#define ddr_an_version C_011_D4_02_2_ddr_an_version
+#include "param_mc_C-011_D4-02-2.c"
+#undef mc_init_tbl
+#undef ddr_an_version
+
+static void apply_C_011_D4_02_2(void)
+{
+	memcpy(mc_init_tbl, C_011_D4_02_2_mc_init_tbl, sizeof(uint32_t) * MC_INIT_NUM * 2);
+	memcpy(ddr_an_version, C_011_D4_02_2_ddr_an_version, strlen(C_011_D4_02_2_ddr_an_version) + 1);
+}
+
+#define mc_odt_pins_tbl T1bc_mc_odt_pins_tbl
+#define mc_mr1_tbl T1bc_mc_mr1_tbl
+#define mc_mr2_tbl T1bc_mc_mr2_tbl
+#define mc_mr5_tbl T1bc_mc_mr5_tbl
+#define mc_mr6_tbl T1bc_mc_mr6_tbl
+#define mc_phy_settings_tbl T1bc_mc_phy_settings_tbl
+#define swizzle_mc_tbl T1bc_swizzle_mc_tbl
+#define swizzle_phy_tbl T1bc_swizzle_phy_tbl
+#include "param_swizzle_T1bc.c"
+#undef mc_odt_pins_tbl
+#undef mc_mr1_tbl
+#undef mc_mr2_tbl
+#undef mc_mr5_tbl
+#undef mc_mr6_tbl
+#undef mc_phy_settings_tbl
+#undef swizzle_mc_tbl
+#undef swizzle_phy_tbl
+
+static void apply_T1bc(void)
+{
+	memcpy(mc_odt_pins_tbl, T1bc_mc_odt_pins_tbl, ARRAY_SIZE(mc_odt_pins_tbl));
+	memcpy(mc_mr1_tbl, T1bc_mc_mr1_tbl, ARRAY_SIZE(mc_mr1_tbl));
+	memcpy(mc_mr2_tbl, T1bc_mc_mr2_tbl, ARRAY_SIZE(mc_mr2_tbl));
+	memcpy(mc_mr5_tbl, T1bc_mc_mr5_tbl, ARRAY_SIZE(mc_mr5_tbl));
+	memcpy(mc_mr6_tbl, T1bc_mc_mr6_tbl, ARRAY_SIZE(mc_mr6_tbl));
+	memcpy(mc_phy_settings_tbl, T1bc_mc_phy_settings_tbl, sizeof(uint32_t) * MC_PHYSET_NUM * 2);
+	memcpy(swizzle_mc_tbl, T1bc_swizzle_mc_tbl, sizeof(uint32_t) * SWIZZLE_MC_NUM * 2);
+	memcpy(swizzle_phy_tbl, T1bc_swizzle_phy_tbl, sizeof(uint32_t) * SIZZLE_PHY_NUM * 2);
+}
+
+void ddr_param_setup(void)
+{
+	bool status;
+	char sku[32] = {0};
+	uint16_t sku_len;
+
+	/* Read SoM ID EEPROM */
+	cpg_i2c_setup((1 << 1));
+	pfc_i2c01_setup(0, 1);
+	riic_setup(RZG2L_RIIC1_BASE);
+	status = riic_tlv_read_eeprom(0x50, 0x00);
+	pfc_i2c01_setup(0, 0);
+	cpg_i2c_setup(0);
+	if (!status) {
+		ERROR("Failed to read SoM EEPROM @ 0x50!\n");
+		goto mem_default;
+	}
+
+	/*
+	 *find som part number, e.g.:
+	 * - SRG2LDUWB1D01GE008V11C2
+	 * - SRG2LDUWB1D02GE016V11I2
+	 */
+	sku_len = riic_tlv_find(TLV_CODE_PART_NUMBER, NULL, NULL);
+	if (!sku_len || sku_len >= sizeof(sku)) {
+		ERROR("SoM SKU length on EEPROM is invalid: %d\n", sku_len);
+		goto mem_default;
+	}
+	sku_len = riic_tlv_find(TLV_CODE_PART_NUMBER, (uint8_t *)sku, NULL);
+
+	/* choose memory config by size digit [12] */
+	switch(sku[12]) {
+	default:
+		ERROR("EEPROM specifies unsupported memory size: '%c'\n", sku[12]);
+		goto mem_default;
+	case '1':
+		goto mem_1g;
+	case '2':
+		goto mem_2g;
+	}
+
+mem_default:
+mem_1g:
+	apply_T1bc();
+	apply_C_011_D4_02_2();
+	NOTICE("memory settings: %s %s\n", "T1bc", "C-011_D4-02-2");
+	return;
+mem_2g:
+	apply_T1bc();
+	apply_C_011_D4_01_1();
+	NOTICE("memory settings: %s %s\n", "T1bc", "C-011_D4-01-1");
+	return;
+}
diff --git a/plat/renesas/rz/board/sr_rzg2l/rz_board.mk b/plat/renesas/rz/board/sr_rzg2l/rz_board.mk
new file mode 100644
index 000000000..a553b5c3e
--- /dev/null
+++ b/plat/renesas/rz/board/sr_rzg2l/rz_board.mk
@@ -0,0 +1,20 @@
+# SPDX-License-Identifier: BSD-3-Clause
+#
+# Copyright 2024 Josua Mayer <josua@solid-run.com>
+#
+
+BL2_SOURCES += \
+	plat/renesas/rz/common/drivers/riic.c \
+	plat/renesas/rz/common/drivers/riic_tlv.c
+
+DDR_SOURCES += \
+	plat/renesas/rz/board/sr_rzg2l/ddr_params.c
+
+PLAT_INCLUDES += -Iplat/renesas/rz/soc/g2l/drivers/ddr
+PLAT_INCLUDES += -Iplat/renesas/rz/common/drivers/ddr
+
+DDR_PARAM_SETUP := 1
+$(eval $(call add_define,DDR_PARAM_SETUP))
+
+DDR_PLL4    := 1600
+$(eval $(call add_define,DDR_PLL4))
-- 
2.35.3

