From 04288559f7e1747def2aa78fb9d83ca4d59bdb78 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Sun, 26 May 2024 11:18:32 +0200
Subject: [PATCH] board: sr_rzg2l: optimise ddr parameter selection for size

Previous implementation used 3 copies of the full ddr register settings.
One per memroy configuration plus an extra for the live configuration.

Reduce size by choosing one baseline and only adding the differences
for each other configuration.
Currently the differences between 1 and 2GB versions is 68 byte.
All ddr controller registers values in total are 1740  byte.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 plat/renesas/rz/board/sr_rzg2l/ddr_params.c | 108 +++++++++-----------
 1 file changed, 51 insertions(+), 57 deletions(-)

diff --git a/plat/renesas/rz/board/sr_rzg2l/ddr_params.c b/plat/renesas/rz/board/sr_rzg2l/ddr_params.c
index d133eac6d..a4a874d49 100644
--- a/plat/renesas/rz/board/sr_rzg2l/ddr_params.c
+++ b/plat/renesas/rz/board/sr_rzg2l/ddr_params.c
@@ -20,79 +20,73 @@
 #include <rz_private.h>
 
 /*
- * These structures are directly linked within ddr driver,
- * not easily replaced with function calls or pointers.
- *
- * Because all parameters are same size, they can be applied with memcpy.
+ * Import T1bc C-011_D4-02-2 as baseline configurations.
+ * Override const keyword to allow runtime patching ...
  */
-uint32_t mc_init_tbl[MC_INIT_NUM][2] = {0};
-uint32_t mc_odt_pins_tbl[4] = {0};
-uint32_t mc_mr1_tbl[2] = {0};
-uint32_t mc_mr2_tbl[2] = {0};
-uint32_t mc_mr5_tbl[2] = {0};
-uint32_t mc_mr6_tbl[2] = {0};
-uint32_t mc_phy_settings_tbl[MC_PHYSET_NUM][2] = {0};
-uint32_t swizzle_mc_tbl[SWIZZLE_MC_NUM][2] = {0};
-uint32_t swizzle_phy_tbl[SIZZLE_PHY_NUM][2] = {0};
+#define const
+#define ddr_an_version C_011_D4_01_1_ddr_an_version
+#include "param_mc_C-011_D4-01-1.c"
+#include "param_swizzle_T1bc.c"
+#undef ddr_an_version
+#undef const
+
+/* declare ddr tool version string outside of parameters to reserve extra space */
 char ddr_an_version[12] = {0};
 
 /*
- * Each set of parameters are generated by Renesas tooling using same name.
- * Include the parameters here adding individual prefixes by preprocessor.
+ * Define differential patch functions for each supported memory
+ * configuration, relative to the baseline.
  */
 
-#define mc_init_tbl C_011_D4_01_1_mc_init_tbl
-#define ddr_an_version C_011_D4_01_1_ddr_an_version
-#include "param_mc_C-011_D4-01-1.c"
-#undef mc_init_tbl
-#undef ddr_an_version
+/*
+ * Patch a 2d array where first element is a register address and second element its value.
+ * The patch and the baseline must both be sorted by register address.
+ */
+static inline void apply_regtable_patch(uint32_t base[MC_INIT_NUM][2], const uint32_t patch[][2], size_t patch_size)
+{
+	size_t i, j;
+
+	/* for each patch entry update register value in base */
+	for (i = 0, j = 0; i < MC_INIT_NUM  && j < patch_size; i++)
+		if (base[i][0] == patch[j][0])
+			base[i][1] = patch[j++][1];
+}
 
-static void apply_C_011_D4_01_1(void)
+static inline void apply_C_011_D4_01_1(void)
 {
-	memcpy(&mc_init_tbl, &C_011_D4_01_1_mc_init_tbl, sizeof(uint32_t) * MC_INIT_NUM * 2);
 	memcpy(ddr_an_version, C_011_D4_01_1_ddr_an_version, strlen(C_011_D4_01_1_ddr_an_version) + 1);
 }
 
-#define mc_init_tbl C_011_D4_02_2_mc_init_tbl
-#define ddr_an_version C_011_D4_02_2_ddr_an_version
-#include "param_mc_C-011_D4-02-2.c"
-#undef mc_init_tbl
-#undef ddr_an_version
-
-static void apply_C_011_D4_02_2(void)
+static const uint32_t C_011_D4_01_1_mc_init_tbl[][2] = {
+	{ DENALI_CTL_14, 0x09160255 },
+	{ DENALI_CTL_17, 0x00002706 },
+	{ DENALI_CTL_19, 0x06001C0B },
+	{ DENALI_CTL_23, 0x01000C0B },
+	{ DENALI_CTL_24, 0x0B031701 },
+	{ DENALI_CTL_25, 0x0100000B },
+	{ DENALI_CTL_30, 0x00000118 },
+	{ DENALI_CTL_34, 0x01200255 },
+	{ DENALI_CTL_35, 0x00000120 },
+	{ DENALI_CTL_69, 0x00000210 },
+	{ DENALI_CTL_72, 0x00000210 },
+	{ DENALI_CTL_122, 0x01010100 },
+	{ DENALI_CTL_123, 0x00010101 },
+	{ DENALI_CTL_124, 0x0FFF0000 },
+	{ DENALI_CTL_125, 0x0001FF00 },
+	{ DENALI_CTL_177, 0x01020000 },
+	{ DENALI_CTL_398, 0x030A0205 },
+};
+
+const char C_011_D4_02_2_ddr_an_version[] = "v3.0.1";
+
+static inline void apply_C_011_D4_02_2(void)
 {
-	memcpy(mc_init_tbl, C_011_D4_02_2_mc_init_tbl, sizeof(uint32_t) * MC_INIT_NUM * 2);
+	apply_regtable_patch(mc_init_tbl, C_011_D4_01_1_mc_init_tbl, ARRAY_SIZE(C_011_D4_01_1_mc_init_tbl));
 	memcpy(ddr_an_version, C_011_D4_02_2_ddr_an_version, strlen(C_011_D4_02_2_ddr_an_version) + 1);
 }
 
-#define mc_odt_pins_tbl T1bc_mc_odt_pins_tbl
-#define mc_mr1_tbl T1bc_mc_mr1_tbl
-#define mc_mr2_tbl T1bc_mc_mr2_tbl
-#define mc_mr5_tbl T1bc_mc_mr5_tbl
-#define mc_mr6_tbl T1bc_mc_mr6_tbl
-#define mc_phy_settings_tbl T1bc_mc_phy_settings_tbl
-#define swizzle_mc_tbl T1bc_swizzle_mc_tbl
-#define swizzle_phy_tbl T1bc_swizzle_phy_tbl
-#include "param_swizzle_T1bc.c"
-#undef mc_odt_pins_tbl
-#undef mc_mr1_tbl
-#undef mc_mr2_tbl
-#undef mc_mr5_tbl
-#undef mc_mr6_tbl
-#undef mc_phy_settings_tbl
-#undef swizzle_mc_tbl
-#undef swizzle_phy_tbl
-
-static void apply_T1bc(void)
+static inline void apply_T1bc(void)
 {
-	memcpy(mc_odt_pins_tbl, T1bc_mc_odt_pins_tbl, ARRAY_SIZE(mc_odt_pins_tbl));
-	memcpy(mc_mr1_tbl, T1bc_mc_mr1_tbl, ARRAY_SIZE(mc_mr1_tbl));
-	memcpy(mc_mr2_tbl, T1bc_mc_mr2_tbl, ARRAY_SIZE(mc_mr2_tbl));
-	memcpy(mc_mr5_tbl, T1bc_mc_mr5_tbl, ARRAY_SIZE(mc_mr5_tbl));
-	memcpy(mc_mr6_tbl, T1bc_mc_mr6_tbl, ARRAY_SIZE(mc_mr6_tbl));
-	memcpy(mc_phy_settings_tbl, T1bc_mc_phy_settings_tbl, sizeof(uint32_t) * MC_PHYSET_NUM * 2);
-	memcpy(swizzle_mc_tbl, T1bc_swizzle_mc_tbl, sizeof(uint32_t) * SWIZZLE_MC_NUM * 2);
-	memcpy(swizzle_phy_tbl, T1bc_swizzle_phy_tbl, sizeof(uint32_t) * SIZZLE_PHY_NUM * 2);
 }
 
 #if (defined(BL33_ARG1_FDTBLOB) && BL33_ARG1_FDTBLOB) || (defined(BL33_ARG23_DRAM_INFO) && BL33_ARG23_DRAM_INFO)
-- 
2.35.3

