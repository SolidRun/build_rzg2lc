From 41d603f078a83ef34761a51ed2ab59ed8dd12124 Mon Sep 17 00:00:00 2001
From: Yazan Shhady <yazan.shhady@solid-run.com>
Date: Tue, 27 Sep 2022 04:27:55 +0300
Subject: [PATCH 1/9] add rzg2lc-solidrun board support

---
 board/solidrun/rcar-common/common.c         | 160 ++++++++++++++++++++
 board/solidrun/rcar-common/gen3-spl.c       |  60 ++++++++
 board/solidrun/rzg2lc/Kconfig               |  15 ++
 board/solidrun/rzg2lc/Makefile              |  13 ++
 board/solidrun/rzg2lc/rzg2lc-hummingboard.c |  92 +++++++++++
 configs/rzg2lc-solidrun_defconfig           |  76 ++++++++++
 include/configs/rzg2lc-hummingboard.h       |  73 +++++++++
 7 files changed, 489 insertions(+)
 create mode 100644 board/solidrun/rcar-common/common.c
 create mode 100644 board/solidrun/rcar-common/gen3-spl.c
 create mode 100644 board/solidrun/rzg2lc/Kconfig
 create mode 100644 board/solidrun/rzg2lc/Makefile
 create mode 100644 board/solidrun/rzg2lc/rzg2lc-hummingboard.c
 create mode 100644 configs/rzg2lc-solidrun_defconfig
 create mode 100644 include/configs/rzg2lc-hummingboard.h

diff --git a/board/solidrun/rcar-common/common.c b/board/solidrun/rcar-common/common.c
new file mode 100644
index 0000000000..ed0afde64f
--- /dev/null
+++ b/board/solidrun/rcar-common/common.c
@@ -0,0 +1,160 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * board/renesas/rcar-common/common.c
+ *
+ * Copyright (C) 2013 Renesas Electronics Corporation
+ * Copyright (C) 2013 Nobuhiro Iwamatsu <nobuhiro.iwamatsu.yj@renesas.com>
+ * Copyright (C) 2015 Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <init.h>
+#include <asm/global_data.h>
+#include <dm/uclass-internal.h>
+#include <asm/arch/rmobile.h>
+#include <linux/libfdt.h>
+
+#ifdef CONFIG_RCAR_GEN3
+
+#if defined(CONFIG_TARGET_HIHOPE_RZG2)
+#include <asm/system.h>
+#include <asm/ptrace.h>
+
+#include "../rzg-common/common.h"
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+/* If the firmware passed a device tree use it for U-Boot DRAM setup. */
+extern u64 rcar_atf_boot_args[];
+
+#if !(defined(CONFIG_R9A07G044L) || defined(CONFIG_R9A07G044C) || defined(CONFIG_R9A07G054L) || defined(CONFIG_R9A07G043U))
+int fdtdec_board_setup(const void *fdt_blob)
+{
+	void *atf_fdt_blob = (void *)(rcar_atf_boot_args[1]);
+	if (fdt_magic(atf_fdt_blob) == FDT_MAGIC)
+		fdt_overlay_apply_node((void *)fdt_blob, 0, atf_fdt_blob, 0);
+	return 0;
+}
+#endif
+
+int dram_init(void)
+{
+	return fdtdec_setup_mem_size_base();
+}
+
+int dram_init_banksize(void)
+{
+#if defined (CONFIG_TARGET_HIHOPE_RZG2)
+	int use_ecc = 0;
+	struct pt_regs regs;
+#endif
+
+	fdtdec_setup_memory_banksize();
+
+#if defined (CONFIG_TARGET_HIHOPE_RZG2)
+	if (rmobile_get_cpu_type() == RMOBILE_CPU_TYPE_R8A7795) {
+		/* Setting SiP Service GET_ECC_MODE command*/
+		regs.regs[0] = RZG_SIP_SVC_GET_ECC_MODE;
+		smc_call(&regs);
+		/* First result is USE ECC or not*/
+		use_ecc = regs.regs[0];
+
+		if (use_ecc == 1) {
+			int bank;
+
+			for (bank = 0; bank < CONFIG_NR_DRAM_BANKS; bank++) {
+				if ((gd->bd->bi_dram[bank].start & (0x500000000U)) == (0x500000000U)) {
+					gd->bd->bi_dram[bank].start =
+						(gd->bd->bi_dram[bank].start & 0x0FFFFFFFFU)
+						| 0x600000000U;
+				}
+			}
+		}
+	}
+#endif
+
+	return 0;
+}
+
+#if defined(CONFIG_OF_BOARD_SETUP)
+static int is_mem_overlap(void *blob, int first_mem_node, int curr_mem_node)
+{
+	struct fdt_resource first_mem_res, curr_mem_res;
+	int curr_mem_reg, first_mem_reg = 0;
+	int ret;
+
+	for (;;) {
+		ret = fdt_get_resource(blob, first_mem_node, "reg",
+				       first_mem_reg++, &first_mem_res);
+		if (ret) /* No more entries, no overlap found */
+			return 0;
+
+		curr_mem_reg = 0;
+		for (;;) {
+			ret = fdt_get_resource(blob, curr_mem_node, "reg",
+					       curr_mem_reg++, &curr_mem_res);
+			if (ret) /* No more entries, check next tuple */
+				break;
+
+			if (curr_mem_res.end < first_mem_res.start)
+				continue;
+
+			if (curr_mem_res.start >= first_mem_res.end)
+				continue;
+
+			printf("Overlap found: 0x%llx..0x%llx / 0x%llx..0x%llx\n",
+				first_mem_res.start, first_mem_res.end,
+				curr_mem_res.start, curr_mem_res.end);
+
+			return 1;
+		}
+	}
+
+	return 0;
+}
+
+int ft_board_setup(void *blob, struct bd_info *bd)
+{
+	/*
+	 * Scrub duplicate /memory@* node entries here. Some R-Car DTs might
+	 * contain multiple /memory@* nodes, however fdt_fixup_memory_banks()
+	 * either generates single /memory node or updates the first /memory
+	 * node. Any remaining memory nodes are thus potential duplicates.
+	 *
+	 * However, it is not possible to delete all the memory nodes right
+	 * away, since some of those might not be DRAM memory nodes, but some
+	 * sort of other memory. Thus, delete only the memory nodes which are
+	 * in the R-Car3 DBSC ranges.
+	 */
+	int mem = 0, first_mem_node = 0;
+
+	for (;;) {
+		mem = fdt_node_offset_by_prop_value(blob, mem,
+						    "device_type", "memory", 7);
+		if (mem < 0)
+			break;
+		if (!fdtdec_get_is_enabled(blob, mem))
+			continue;
+
+		/* First memory node, patched by U-Boot */
+		if (!first_mem_node) {
+			first_mem_node = mem;
+			continue;
+		}
+
+		/* Check the remaining nodes and delete duplicates */
+		if (!is_mem_overlap(blob, first_mem_node, mem))
+			continue;
+
+		/* Delete duplicate node, start again */
+		fdt_del_node(blob, mem);
+		first_mem_node = 0;
+		mem = 0;
+	}
+
+	return 0;
+}
+#endif
+#endif
diff --git a/board/solidrun/rcar-common/gen3-spl.c b/board/solidrun/rcar-common/gen3-spl.c
new file mode 100644
index 0000000000..b02a946a21
--- /dev/null
+++ b/board/solidrun/rcar-common/gen3-spl.c
@@ -0,0 +1,60 @@
+// SPDX-License-Identifier: GPL-2.0
+/*
+ * R-Car Gen3 recovery SPL
+ *
+ * Copyright (C) 2019 Marek Vasut <marek.vasut@gmail.com>
+ */
+
+#include <common.h>
+#include <cpu_func.h>
+#include <image.h>
+#include <init.h>
+#include <log.h>
+#include <asm/io.h>
+#include <spl.h>
+#include <linux/bitops.h>
+
+#define RCAR_CNTC_BASE	0xE6080000
+#define CNTCR_EN	BIT(0)
+
+void board_init_f(ulong dummy)
+{
+	writel(CNTCR_EN, RCAR_CNTC_BASE);
+	timer_init();
+}
+
+void spl_board_init(void)
+{
+	/* UART clocks enabled and gd valid - init serial console */
+	preloader_console_init();
+}
+
+u32 spl_boot_device(void)
+{
+	return BOOT_DEVICE_UART;
+}
+
+void __noreturn jump_to_image_no_args(struct spl_image_info *spl_image)
+{
+	debug("image entry point: 0x%lx\n", spl_image->entry_point);
+	if (spl_image->os == IH_OS_ARM_TRUSTED_FIRMWARE) {
+		typedef void (*image_entry_arg_t)(int, int, int, int)
+			__attribute__ ((noreturn));
+		image_entry_arg_t image_entry =
+			(image_entry_arg_t)(uintptr_t) spl_image->entry_point;
+		image_entry(IH_MAGIC, CONFIG_SPL_TEXT_BASE, 0, 0);
+	} else {
+		typedef void __noreturn (*image_entry_noargs_t)(void);
+		image_entry_noargs_t image_entry =
+			(image_entry_noargs_t)spl_image->entry_point;
+		image_entry();
+	}
+}
+
+void s_init(void)
+{
+}
+
+void reset_cpu(void)
+{
+}
diff --git a/board/solidrun/rzg2lc/Kconfig b/board/solidrun/rzg2lc/Kconfig
new file mode 100644
index 0000000000..43f6fa305f
--- /dev/null
+++ b/board/solidrun/rzg2lc/Kconfig
@@ -0,0 +1,15 @@
+if TARGET_RZG2LC_HUMMINGBOARD
+
+config SYS_SOC
+	default "rmobile"
+
+config SYS_BOARD
+	default "rzg2lc-hummingboard"
+
+config SYS_VENDOR
+	default "solidrun"
+
+config SYS_CONFIG_NAME
+	default "rzg2lc-hummingboard"
+
+endif
diff --git a/board/solidrun/rzg2lc/Makefile b/board/solidrun/rzg2lc/Makefile
new file mode 100644
index 0000000000..add536bd7e
--- /dev/null
+++ b/board/solidrun/rzg2lc/Makefile
@@ -0,0 +1,13 @@
+#
+# board/renesas/salvator-x/Makefile
+#
+# Copyright (C) 2015 Renesas Electronics Corporation
+#
+# SPDX-License-Identifier: GPL-2.0+
+#
+
+ifdef CONFIG_SPL_BUILD
+obj-y	:= ../rcar-common/gen3-spl.o
+else
+obj-y	:= rzg2lc-dev.o ../rcar-common/common.o
+endif
diff --git a/board/solidrun/rzg2lc/rzg2lc-hummingboard.c b/board/solidrun/rzg2lc/rzg2lc-hummingboard.c
new file mode 100644
index 0000000000..0894eef2e4
--- /dev/null
+++ b/board/solidrun/rzg2lc/rzg2lc-hummingboard.c
@@ -0,0 +1,92 @@
+#include <common.h>
+#include <cpu_func.h>
+#include <image.h>
+#include <init.h>
+#include <malloc.h>
+#include <netdev.h>
+#include <dm.h>
+#include <dm/platform_data/serial_sh.h>
+#include <asm/processor.h>
+#include <asm/mach-types.h>
+#include <asm/io.h>
+#include <linux/bitops.h>
+#include <linux/errno.h>
+#include <asm/arch/sys_proto.h>
+#include <asm/gpio.h>
+#include <asm/arch/gpio.h>
+#include <asm/arch/rmobile.h>
+#include <asm/arch/rcar-mstp.h>
+#include <asm/arch/sh_sdhi.h>
+#include <i2c.h>
+#include <mmc.h>
+
+DECLARE_GLOBAL_DATA_PTR;
+
+#define PFC_BASE	0x11030000
+
+#define ETH_CH0		(PFC_BASE + 0x300c)
+#define I2C_CH1         (PFC_BASE + 0x1870)
+#define ETH_PVDD_3300	0x00
+#define ETH_PVDD_1800	0x01
+#define ETH_PVDD_2500	0x02
+#define ETH_MII_RGMII	(PFC_BASE + 0x3018)
+
+/* CPG */
+#define CPG_BASE					0x11010000
+#define CPG_CLKON_BASE				(CPG_BASE + 0x500)
+#define CPG_RESET_BASE				(CPG_BASE + 0x800)
+#define CPG_RESET_ETH				(CPG_RESET_BASE + 0x7C)
+#define CPG_RESET_I2C                           (CPG_RESET_BASE + 0x80)
+#define CPG_PL2_SDHI_DSEL                           (CPG_BASE + 0x218)
+#define CPG_CLK_STATUS                           (CPG_BASE + 0x280)
+
+/* PFC */
+#define PFC_P37						(PFC_BASE + 0x037)
+#define PFC_PM37					(PFC_BASE + 0x16E)
+#define PFC_PMC37					(PFC_BASE + 0x237)
+
+void s_init(void)
+{
+	/* SD1 power control: P39_1 = 0; P39_2 = 1; */
+	*(volatile u32 *)(PFC_PMC37) &= 0xFFFFFFF9; /* Port func mode 0b00 */
+	*(volatile u32 *)(PFC_PM37) = (*(volatile u32 *)(PFC_PM37) & 0xFFFFFFC3) | 0x28; /* Port output mode 0b1010 */
+#if CONFIG_TARGET_SMARC_RZG2LC
+	*(volatile u32 *)(PFC_P37) = (*(volatile u32 *)(PFC_P37) & 0xFFFFFFF9) | 0x6;	/* Port 39[2:1] output value 0b11*/
+#else
+	*(volatile u32 *)(PFC_P37) = (*(volatile u32 *)(PFC_P37) & 0xFFFFFFF9) | 0x4;	/* Port 39[2:1] output value 0b10*/
+#endif
+
+	/* can go in board_eht_init() once enabled */
+	*(volatile u32 *)(ETH_CH0) = (*(volatile u32 *)(ETH_CH0) & 0xFFFFFFFC) | ETH_PVDD_1800;
+	/* Enable RGMII for ETH0 */
+	*(volatile u32 *)(ETH_MII_RGMII) = (*(volatile u32 *)(ETH_MII_RGMII) & 0xFFFFFFFC);
+	/* ETH CLK */
+	*(volatile u32 *)(CPG_RESET_ETH) = 0x30001;
+	/* I2C CLK */
+	*(volatile u32 *)(CPG_RESET_I2C) = 0xF000F;
+	/* I2C pin non GPIO enable */
+	*(volatile u32 *)(I2C_CH1) = 0x01010101;
+	/* SD CLK */
+	*(volatile u32 *)(CPG_PL2_SDHI_DSEL) = 0x00110011;
+	while (*(volatile u32 *)(CPG_CLK_STATUS) != 0)
+		;
+}
+
+int board_early_init_f(void)
+{
+
+	return 0;
+}
+
+int board_init(void)
+{
+	/* adress of boot parameters */
+	gd->bd->bi_boot_params = CONFIG_SYS_TEXT_BASE + 0x50000;
+
+	return 0;
+}
+
+void reset_cpu(void)
+{
+
+}
diff --git a/configs/rzg2lc-solidrun_defconfig b/configs/rzg2lc-solidrun_defconfig
new file mode 100644
index 0000000000..8abf9c9cf6
--- /dev/null
+++ b/configs/rzg2lc-solidrun_defconfig
@@ -0,0 +1,76 @@
+CONFIG_ARM=y
+CONFIG_ARCH_CPU_INIT=y
+CONFIG_ARCH_RMOBILE=y
+CONFIG_SYS_TEXT_BASE=0x50000000
+CONFIG_ENV_SIZE=0x20000
+CONFIG_ENV_OFFSET=0xFFFE0000
+CONFIG_DM_GPIO=y
+CONFIG_RCAR_GEN3=y
+CONFIG_R9A07G044C=y
+CONFIG_TARGET_RZG2LC_HUMMINGBOARD=y
+CONFIG_DEFAULT_DEVICE_TREE="rzg2lc-hummingboard"
+CONFIG_SMBIOS_PRODUCT_NAME=""
+CONFIG_SPL=n
+CONFIG_FIT=y
+CONFIG_USE_BOOTARGS=y
+CONFIG_BOOTARGS="root=/dev/nfs rw nfsroot=192.168.0.1:/export/rfs ip=192.168.0.20"
+CONFIG_SUPPORT_RAW_INITRD=y
+CONFIG_DEFAULT_FDT_FILE="rzg2lc-solidrun.dtb"
+CONFIG_VERSION_VARIABLE=y
+CONFIG_HUSH_PARSER=y
+CONFIG_CMD_BOOTZ=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_I2C=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PCI=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_MII=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_EXT2=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_EXT4_WRITE=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_OF_CONTROL=y
+CONFIG_OF_PLATDATA=y
+CONFIG_OF_LIST="rzg2lc-hummingboard"
+CONFIG_MULTI_DTB_FIT_LZO=y
+CONFIG_MULTI_DTB_FIT_USER_DEFINED_AREA=y
+CONFIG_ENV_OVERWRITE=y
+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
+CONFIG_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_CLK=y
+CONFIG_CLK_RENESAS=y
+CONFIG_CLK_R9A07G044L=y
+CONFIG_RCAR_GPIO=y
+CONFIG_PINCTRL_PFC_RZG2L=y
+CONFIG_RZG2L_GPIO=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_RCAR_IIC=y
+CONFIG_SH_SDHI=y
+CONFIG_BITBANGMII=y
+CONFIG_PHY_MICREL=y
+CONFIG_PHY_MICREL_KSZ90X1=y
+CONFIG_DM_ETH=y
+CONFIG_RENESAS_RAVB=y
+CONFIG_PCI=y
+CONFIG_DM_PCI=y
+CONFIG_PCI_RCAR_GEN3=y
+CONFIG_DM_REGULATOR=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_DM_REGULATOR_GPIO=y
+CONFIG_SCIF_CONSOLE=y
+CONFIG_TEE=y
+CONFIG_OPTEE=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_STORAGE=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_SMBIOS_MANUFACTURER=""
+CONFIG_ENV_IS_IN_MMC=y
+CONFIG_SYS_I2C_RZG2L_RIIC=y
diff --git a/include/configs/rzg2lc-hummingboard.h b/include/configs/rzg2lc-hummingboard.h
new file mode 100644
index 0000000000..c3feee3c72
--- /dev/null
+++ b/include/configs/rzg2lc-hummingboard.h
@@ -0,0 +1,73 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Copyright (C) 2015 Renesas Electronics Corporation
+ */
+
+#ifndef __RZG2LC_DEV_H
+#define __RZG2LC_DEV_H
+
+#include <asm/arch/rmobile.h>
+
+#define CONFIG_REMAKE_ELF
+
+#ifdef CONFIG_SPL
+#define CONFIG_SPL_TARGET	"spl/u-boot-spl.scif"
+#endif
+
+/* boot option */
+
+#define CONFIG_CMDLINE_TAG
+#define CONFIG_SETUP_MEMORY_TAGS
+#define CONFIG_INITRD_TAG
+
+/* Generic Interrupt Controller Definitions */
+/* RZ/G2L use GIC-v3 */
+#define CONFIG_GICV3
+#define GICD_BASE	0x11900000
+#define GICR_BASE	0x11960000
+
+/* console */
+#define CONFIG_SYS_CBSIZE		2048
+#define CONFIG_SYS_BARGSIZE		CONFIG_SYS_CBSIZE
+#define CONFIG_SYS_MAXARGS		64
+#define CONFIG_SYS_BAUDRATE_TABLE	{ 115200, 38400 }
+
+/* PHY needs a longer autoneg timeout */
+#define PHY_ANEG_TIMEOUT		20000
+
+/* MEMORY */
+#define CONFIG_SYS_INIT_SP_ADDR		CONFIG_SYS_TEXT_BASE
+
+/* SDHI clock freq */
+#define CONFIG_SH_SDHI_FREQ		133000000
+
+#define DRAM_RSV_SIZE			0x08000000
+#define CONFIG_SYS_SDRAM_BASE		(0x40000000 + DRAM_RSV_SIZE)
+#define CONFIG_SYS_SDRAM_SIZE		(0x40000000u - DRAM_RSV_SIZE) //total 1GB
+#define CONFIG_SYS_LOAD_ADDR		0x58000000
+#define CONFIG_LOADADDR			CONFIG_SYS_LOAD_ADDR // Default load address for tfpt,bootp...
+#define CONFIG_VERY_BIG_RAM
+#define CONFIG_MAX_MEM_MAPPED		(0x40000000u - DRAM_RSV_SIZE)
+
+#define CONFIG_SYS_MONITOR_BASE		0x00000000
+#define CONFIG_SYS_MONITOR_LEN		(1 * 1024 * 1024)
+#define CONFIG_SYS_MALLOC_LEN		(64 * 1024 * 1024)
+#define CONFIG_SYS_BOOTM_LEN		(64 << 20)
+
+/* The HF/QSPI layout permits up to 1 MiB large bootloader blob */
+#define CONFIG_BOARD_SIZE_LIMIT		1048576
+
+/* ENV setting */
+#define CONFIG_EXTRA_ENV_SETTINGS	\
+	"bootm_size=0x10000000\0"
+
+#define CONFIG_BOOTCOMMAND	\
+	"tftp 0x48080000 Image; " \
+	"tftp 0x48000000 Image-"CONFIG_DEFAULT_FDT_FILE"; " \
+	"booti 0x48080000 - 0x48000000"
+
+/* For board */
+/* Ethernet RAVB */
+#define CONFIG_BITBANGMII_MULTI
+
+#endif /* __RZG2LC_DEV_H */
-- 
2.25.1

