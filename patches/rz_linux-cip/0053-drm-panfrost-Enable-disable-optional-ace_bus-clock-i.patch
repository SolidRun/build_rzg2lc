From fe8296060d6a9485ee4db9a96d3118a14ac60056 Mon Sep 17 00:00:00 2001
From: Jon Nettleton <jon@solid-run.com>
Date: Thu, 28 Sep 2023 15:37:12 +0200
Subject: [PATCH 53/53] drm/panfrost: Enable/disable optional ace_bus clock if
 defined

The Renesas RZ/G2L and RZ/V2L mali gpus have a third clock
for driving the ACE-Lite interface. This must be enabled
for the GPU to work properly. Since not all mali implementations
may require this we don't fail on initialization if the
driver is unable to aquire the clock.

Signed-off-by: Jon Nettleton <jon@solid-run.com>
---
 drivers/gpu/drm/panfrost/panfrost_device.c | 19 +++++++++++++++++++
 drivers/gpu/drm/panfrost/panfrost_device.h |  1 +
 2 files changed, 20 insertions(+)

diff --git a/drivers/gpu/drm/panfrost/panfrost_device.c b/drivers/gpu/drm/panfrost/panfrost_device.c
index c256929e8..5f3585d38 100644
--- a/drivers/gpu/drm/panfrost/panfrost_device.c
+++ b/drivers/gpu/drm/panfrost/panfrost_device.c
@@ -73,8 +73,25 @@ static int panfrost_clk_init(struct panfrost_device *pfdev)
 			goto disable_clock;
 	}
 
+	pfdev->bus_ace_clock = devm_clk_get_optional(pfdev->dev, "bus_ace");
+	if (IS_ERR(pfdev->bus_ace_clock)) {
+		dev_warn(pfdev->dev, "get bus_ace_clock failed %ld\n",
+			PTR_ERR(pfdev->bus_ace_clock));
+	}
+
+	if (!IS_ERR(pfdev->bus_ace_clock)) {
+		rate = clk_get_rate(pfdev->bus_ace_clock);
+		dev_info(pfdev->dev, "bus_ace_clock rate = %lu\n", rate);
+
+		err = clk_prepare_enable(pfdev->bus_ace_clock);
+		if (err)
+			goto disable_bus_clock;
+	}
+
 	return 0;
 
+disable_bus_clock:
+	clk_disable_unprepare(pfdev->bus_clock);
 disable_clock:
 	clk_disable_unprepare(pfdev->clock);
 
@@ -83,6 +100,8 @@ static int panfrost_clk_init(struct panfrost_device *pfdev)
 
 static void panfrost_clk_fini(struct panfrost_device *pfdev)
 {
+	if (!IS_ERR(pfdev->bus_ace_clock))
+		clk_disable_unprepare(pfdev->bus_ace_clock);
 	clk_disable_unprepare(pfdev->bus_clock);
 	clk_disable_unprepare(pfdev->clock);
 }
diff --git a/drivers/gpu/drm/panfrost/panfrost_device.h b/drivers/gpu/drm/panfrost/panfrost_device.h
index 4c6bdea55..3b786e9a0 100644
--- a/drivers/gpu/drm/panfrost/panfrost_device.h
+++ b/drivers/gpu/drm/panfrost/panfrost_device.h
@@ -83,6 +83,7 @@ struct panfrost_device {
 	void __iomem *iomem;
 	struct clk *clock;
 	struct clk *bus_clock;
+	struct clk *bus_ace_clock;
 	struct regulator_bulk_data *regulators;
 	struct reset_control *rstc;
 	/* pm_domains for devices with more than one. */
-- 
2.41.0

